library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;

entity programa_ahorcado is
	port( address : in std_logic_vector(7 downto 0);
		clk : in std_logic;
		dout : out std_logic_vector(15 downto 0));
	end;

architecture v1 of programa_ahorcado is

	constant ROM_WIDTH: INTEGER:= 16;
	constant ROM_LENGTH: INTEGER:= 256;

	subtype rom_word is std_logic_vector(ROM_WIDTH-1 downto 0);
	type rom_table is array (0 to ROM_LENGTH-1) of rom_word;

constant rom: rom_table := rom_table'(
	"1111000000000000",
	"1101100000000000",
	"0000011100000000",
	"1100000111100000",
	"0010000100000000",
	"1101010000001001",
	"1101100000000000",
	"0010011100000001",
	"1101000000000011",
	"1111000000000001",
	"0000011000001001",
	"0011011000000001",
	"1101010100001011",
	"0000011000001001",
	"1101000000001011",
	"0000000100001010",
	"1101100000000000",
	"0000000100001101",
	"1101100000000000",
	"0000000101000101",
	"1101100000000000",
	"0000000101110010",
	"1101100000000000",
	"0000000101110010",
	"1101100000000000",
	"0000000101101111",
	"1101100000000000",
	"0000000101110010",
	"1101100000000000",
	"0000000101100101",
	"1101100000000000",
	"0000000101110011",
	"1101100000000000",
	"0000000100111010",
	"1101100000000000",
	"0000000100100000",
	"1101100000000000",
	"1001000000000000",
	"1000000001100000",
	"0000011000000001",
	"1101100000000000",
	"0000011000000010",
	"1101100000000000",
	"0000011000000011",
	"1101100000000000",
	"0000011000000100",
	"1101100000000000",
	"1001000000000000",
	"0100011100000000",
	"0000111100000001",
	"1101010000000000",
	"1101100000000000",
	"1001000000000000",
	"0100011100000000",
	"0000111100000010",
	"1101010000000000",
	"1101100000000000",
	"1001000000000000",
	"0100011100000000",
	"0000111100000100",
	"1101010000000000",
	"1101100000000000",
	"1001000000000000",
	"0100011100000000",
	"0000111100001000",
	"1101010000000000",
	"1101100000000000",
	"1001000000000000",
	"1001000000000000",
	"0000000100001010",
	"1101100000000000",
	"0000000100001101",
	"1101100000000000",
	"0000000101010000",
	"1101100000000000",
	"0000000101101111",
	"1101100000000000",
	"0000000101110011",
	"1101100000000000",
	"0000000100111010",
	"1101100000000000",
	"0000000100100000",
	"1101100000000000",
	"0010011001001000",
	"0100000111000000",
	"1101100000000000",
	"1001000000000000",
	"1101100000000000",
	"0100000101000000",
	"1101100000000000",
	"1000101001100000",
	"1101100000001111",
	"1000000001100001",
	"0010000001001000",
	"1101100000000000",
	"1001000000000000",
	"1101100000000000",
	"1001000000000000",
	"1101100000000000",
	"1001000000000000",
	"1000001011111111",
	"0000101010000000",
	"1101010100000000",
	"1101100010000101",
	"0000001100001001",
	"1101100001111110",
	"1010001000001110",
	"1000000011111111",
	"0000100010000000",
	"0101001000000000",
	"0011001100000001",
	"1101010101101001",
	"1001000000000000",
	"0000000000000000",
	"1000100011111111",
	"1101100001111110",
	"0000001100001000",
	"1000100111111111",
	"1101100001111110",
	"1010000100001110",
	"0011001100000001",
	"1101010101110101",
	"0000000011111111",
	"1000100011111111",
	"1101100001111110",
	"1001000000000000",
	"0000010000000011",
	"0000010100100010",
	"0011010100000001",
	"1101010110000000",
	"0011010000000001",
	"1101010101111111",
	"1001000000000000",
	"0000010000000011",
	"0000010100010000",
	"0011010100000001",
	"1101010110000111",
	"0011010000000001",
	"1101010110000110",
	"1001000000000000",
	"1111000000000000",
	"0000000100001010",
	"1101100000000000",
	"0000000100001101",
	"1101100000000000",
	"0000000101010000",
	"1101100000000000",
	"0000000101100001",
	"1101100000000000",
	"0000000101101100",
	"1101100000000000",
	"0000000101100001",
	"1101100000000000",
	"0000000101100010",
	"1101100000000000",
	"0000000101110010",
	"1101100000000000",
	"0000000101100001",
	"1101100000000000",
	"0000000100111010",
	"1101100000000000",
	"1101100000000000",
	"0100000101000000",
	"1101100000000000",
	"1000101001100000",
	"1101100000000000",
	"0100000101000000",
	"1101100000000000",
	"1000101001100000",
	"1101100000000000",
	"0100000101000000",
	"1101100000000000",
	"1000101001100000",
	"1101100000000000",
	"0100000101000000",
	"1101100000000000",
	"1000101001100000",
	"1101100000000000",
	"1001000000000000",
	"1000011001100000",
	"1000011101100001",
	"0000000000001111",
	"0101111000000000",
	"1101010001100000",
	"0000000000001001",
	"0101111100000000",
	"1101010001100010",
	"1101000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000");

begin

process (clk)
begin
	if clk'event and clk = '1' then
		dout <= rom(conv_integer(address));
	end if;
end process;
end v1;
